# Assuming your file has a .ansible extension
$filePath = "path\to\your\DeployConfig.ansible"

# Read the file content
$fileContent = Get-Content -Path $filePath

# Convert the content into XML
[xml]$xmlContent = $fileContent -join "`n"

# Extract details from ConfigChange elements
foreach ($configChange in $xmlContent.SelectNodes("//DeployConfig/ConfigChange")) {
    $type = $configChange.type
    $file = $configChange.file
    $findXPath = $configChange.findXPath

    Write-Output "Type: $type, File: $file, FindXPath: $findXPath"
}



# Assuming your file has a .ansible extension
$filePath = "path\to\your\DeployConfig.ansible"

# Read the file content
$fileContent = Get-Content -Path $filePath

# Convert the content into XML
[xml]$xmlContent = $fileContent -join "`n"

# Extract details from all ConfigChange elements
foreach ($configChange in $xmlContent.SelectNodes("//DeployConfig/ConfigChange")) {
    $type = $configChange.type
    $file = $configChange.file
    $findXPath = $configChange.findXPath

    Write-Output "Type: $type, File: $file, FindXPath: $findXPath"
}
â„–#############
To read and extract configuration details from an XML file using PowerShell, you can use the `Select-Xml` cmdlet. Here's an example based on your provided XML:

```powershell
# Load the XML file with extension 'ss'
$xmlFilePath = "D:\webroot\wwwroot\ProcessEngineWS\DeployConfig.ss"
$xmlContent = Get-Content -Path $xmlFilePath -Raw

# Create an XML object
$xml = [xml]$xmlContent

# Get ConfigChange details and content
$configChanges = $xml.SelectNodes('//ConfigChange')

foreach ($configChange in $configChanges) {
    $type = $configChange.type
    $file = $configChange.file
    $findXPath = $configChange.findXPath
    $content = $configChange.content.InnerXml

    Write-Output "Type: $type"
    Write-Output "File: $file"
    Write-Output "FindXPath: $findXPath"
    Write-Output "Content: $content"
}
```

This script reads the XML file with the '.ss' extension, extracts details from each `<ConfigChange>` node, and outputs the type, file, findXPath, and content of each configuration change. Adjust the `$xmlFilePath` variable if your file path is different.
